format_version: 3
pipelines:
  deploy_to_cluster:
    group: sample
    label_template: ${COUNT}
    lock_behavior: none
    display_order: 3
    environment_variables:
      KUBECONFIG: 'YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL2hvbWUvc2hhYmFiLy5taW5pa3ViZS9jYS5jcnQKICAgIGV4dGVuc2lvbnM6CiAgICAtIGV4dGVuc2lvbjoKICAgICAgICBsYXN0LXVwZGF0ZTogTW9uLCAxOSBTZXAgMjAyMiAxMToyMDowOCBQS1QKICAgICAgICBwcm92aWRlcjogbWluaWt1YmUuc2lncy5rOHMuaW8KICAgICAgICB2ZXJzaW9uOiB2MS4yNi4xCiAgICAgIG5hbWU6IGNsdXN0ZXJfaW5mbwogICAgc2VydmVyOiBodHRwczovLzE5Mi4xNjguNDkuMjo4NDQzCiAgbmFtZTogbWluaWt1YmUKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IG1pbmlrdWJlCiAgICBleHRlbnNpb25zOgogICAgLSBleHRlbnNpb246CiAgICAgICAgbGFzdC11cGRhdGU6IE1vbiwgMTkgU2VwIDIwMjIgMTE6MjA6MDggUEtUCiAgICAgICAgcHJvdmlkZXI6IG1pbmlrdWJlLnNpZ3MuazhzLmlvCiAgICAgICAgdmVyc2lvbjogdjEuMjYuMQogICAgICBuYW1lOiBjb250ZXh0X2luZm8KICAgIG5hbWVzcGFjZTogZ29jZAogICAgdXNlcjogbWluaWt1YmUKICBuYW1lOiBtaW5pa3ViZQpjdXJyZW50LWNvbnRleHQ6IG1pbmlrdWJlCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogbWluaWt1YmUKICB1c2VyOgogICAgY2xpZW50LWNlcnRpZmljYXRlOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSSlZFTkRRV2R0WjBGM1NVSkJaMGxDUVdwQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRldUVkpOZDBWUldVUldVVkZFUlhkd2RHRlhOWEFLWVROV2FWcFZUa0pOUWpSWVJGUkplVTFFYTNoUFJFRXlUVlJyTVUxV2IxaEVWRWt4VFVScmVFOUVRVEpOVkdzeFRWWnZkMDFVUlZoTlFsVkhRVEZWUlFwRGFFMVBZek5zZW1SSFZuUlBiVEZvWXpOU2JHTnVUWGhHYWtGVlFtZE9Wa0pCVFZSRVZ6RndZbTFzY21SWFNteE1XRlo2V2xoSmQyZG5SV2xOUVRCSENrTlRjVWRUU1dJelJGRkZRa0ZSVlVGQk5FbENSSGRCZDJkblJVdEJiMGxDUVZGRE4yNXhRWGMyWlVWblRYTnZORlE0UjBaeFJGbzBhSEY2WTNGMVpHNEtaRTE1Vmk5R01FaHhjbkI0U0ZSV04zY3lZMGRxU3pWUmNqVXlPSEpXTkc4M1JXRjBlRWx2WjJOdUsxUmtjRXBaUW1ORGRrcFVUVWM1TmpSemFUSlBiUXBQU2xWMFFXSlZjVXBsUjFreVV6Uk9RbEJEWlhOSFRXdElRV1pHTjNkUFRHazNkR1YxWjB4MmMzTXdTVkZrTmswMFRtTlpUM0JHV2tSUGFFNVdlVGxRQ2toMU5YZDFNa3R1UTFWbFkwVm5TMEpIY1ZoSFIycEhWMWh6TWtsRFFWWXdVa1ZrUm01QlVESnpjVlJDTWpZM2IyZG1OMkpvVUZkRGFERmtha1ZMVWpZS2FITkNVakE0TVU1SE15ODJlR3d4TlVORVMyVm1OMjVEVTFsc0wxQXdXSGxSYW1aVE5EWlVNRTQyWXpRMU1VbExkbFZJV0RaMGQzWTFNREZ1ZGt4V1NRb3JhekJhV21sU1ExYzROa2RRZW10bWVuQjRMMEpJYVRVNWFrOWpNRlZNYXpSUVRpdExSMUV3YkVGb2QwWkVUM2MwVEdwSFdsTjJZa0ZuVFVKQlFVZHFDbGxFUW1WTlFUUkhRVEZWWkVSM1JVSXZkMUZGUVhkSlJtOUVRV1JDWjA1V1NGTlZSVVpxUVZWQ1oyZHlRbWRGUmtKUlkwUkJVVmxKUzNkWlFrSlJWVWdLUVhkSmQwUkJXVVJXVWpCVVFWRklMMEpCU1hkQlJFRm1RbWRPVmtoVFRVVkhSRUZYWjBKUk5uWkRlVFJvU1c0MmEySm1SSGxCZFVGblpDdGlaR1prUmdwSmVrRk9RbWRyY1docmFVYzVkekJDUVZGelJrRkJUME5CVVVWQmEwTk5VSFJvT0VoU1prbEpVa2hhZUZOdmJGaFVaVkF2VTJZM2FHRlljWE5zUzFodENrRklPVGRuVmxkWVRHUnJVVGt2ZGxGU1NuaEdMMjQxUVVORE5HVnRMMDlIWVRFMGMxRmpjVmxEWVhCYVIzQklNak5GUkRWb1JYQlNNbGRGU0VNNVduRUtkak5KVjFSb2IyRjRWMHBhVG5WVk9XWklNRVJuUjBkaGIxTllkRXd5YzNnMlVrUjBNSFJGVW5jeVZXRmtaREkxWlVKYVNXTTVOemtyVmpnd2MwNVVXUW80V0hZeFNrSm9Namd2VjFkWmRsZzNjalZEVWpaT2QzRklaV3RtTjI5MlowOWpNbUZvTjJGV2IydGFUbFZYV0hSRk1rSlBTemhsVGtwWFJFUkhNWFp5Q25Ga1JXRk1UV1JFYWxoVVkxTkpMM1Z3V0VaTVZqTlBiVTFPYUVVd00yWlNXbXhMUXpsTmMzaHhTa3RuWTA1eVIxWnpOakZ2TmxwbVFWWjRlRkp3TVVjS1VGcHpiMGRaY1cxSVYySkZlVmhTTWt4R1UxcEpiRUYyTjBaTWVqRXZSbHBLYWpSVVUxSkNXbVExUXk5NFJUUk9UR2M5UFFvdExTMHRMVVZPUkNCRFJWSlVTVVpKUTBGVVJTMHRMUzB0CiAgICBjbGllbnQta2V5OiBMUzB0TFMxQ1JVZEpUaUJTVTBFZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFFwTlNVbEZjRUZKUWtGQlMwTkJVVVZCZFRVMlowMVBibWhKUkV4TFQwVXZRbWhoWnpKbFNXRnpNMHR5YmxvelZFMXNabmhrUWpaeE5tTlNNREZsT0U1dUNrSnZlWFZWU3l0a2Rrc3haVXRQZUVkeVkxTkxTVWhLTDJzellWTlhRVmhCY25sVmVrSjJaWFZNU1hScWNHcHBWa3hSUnpGTGFWaG9iVTVyZFVSUlZIY0tibkpDYWtwQ2QwaDRaVGhFYVRSMU4xaHliME0zTjB4T1EwVklaV3BQUkZoSFJIRlNWMUY2YjFSV1kzWlVlRGQxWTB4MGFYQjNiRWh1UWtsRFoxSnhiQXA0YUc5NGJHdzNUbWxCWjBaa1JWSklVbHAzUkRseVMydDNaSFYxTmtsSUt6STBWREZuYjJSWVdYaERhMlZ2WWtGVlpGQk9WRkowTHl0eldtUmxVV2Q1Q201dUt6VjNhMjFLWm5vNVJqaHJTVE13ZFU5ck9VUmxiazlQWkZORGNqRkNNU3R5WTB3clpFNWFOM2t4VTFCd1RrZFhXV3RSYkhaUGFHbzROVWc0Tm1NS1puZFNOSFZtV1hwdVRrWkROVTlFZW1acGFHdE9TbEZKWTBKUmVuTlBRelI0YlZWeU1uZEpSRUZSUVVKQmIwbENRVkZETUZKS2FGVkNlRkJ2ZEZGUk5RcHJUMEV6VWsxV05XcHhWR1Z5VmsxRWR6SlRha2s0VW1KRWJqVjJSMjl3T1RkUFV6ZHNWVmxVWm01c1NHaFRaelJzTjFSa1ZubzRSVXRDT1U5R05YQkxDaXQwVVVaT1R5OVFXRkZGT0VOWU0yOW5kWFJMVVVJM1MySllWbE5SUkVsUlJHeFJTR3hUUkdNelFsaFlOVEoyTTJzek1tNWhXVUpUZDFCQ2FGazNRM0VLYlZsdWVETkxkekEzVFV4NlRreGlaa0ppUWtOSWNtMVBSbk4wTkU1MWVHOTZUbFZWTjFGU2RqZzNTMDEyZERsd1dVNDRibTEyUm1kUFRsaEtOa0V3UndwVmRrcHhNRmR3YkRCQ2VrVTJNUzlETTNkcWNFaE5PSHBYYkhSUUswVk5SRkkxVVZCNWVYRXJTa05oZDNwRlR6WXJkelpVVmpSUFNWSlpRMUpIT0M4eENrUmxjMkowWmtKUFprVmlSVmhUZWtOdFZWSlJiMWRuTldJMVZYTnhTRGRZUlVSek56QlJOalJTWWxSQk9EaFhWazV5TlZOUVNXdDNPWFZLU0UwdlMwa0tWMVoyYVZodlRUVkJiMGRDUVU5RWJUVnpjRFU0Y3pZMU9FcEhaMXBTUlhadVFVdDJWVXNyVlhSaWJXTllRakpoY1UxQlZETllVak54Tm1SM1EzSTRlQXBqTnpVek5tMUZXVFZtY3pVMlJITkViak5RY2pad1QwbEpWU3RZZVZoUlkxVXpabkZRVFZRMlQxb3JObkY0WVhwblFVaHJkbEl3T1U1ck1XTXdOMGh6Q2pOTFVVbHpSVTR6TVZOMVMyMW1iVzVWUzBGWVRqUnpSV1J3TVdKeVltUnFVbWt4ZG1FeWFrSXlkVGxMVmpscFpURXhUalZsZGpSbVFXOUhRa0ZPVjFFS1FVWkxjbGxUVjNkRWFVaEJPVGh1UmxKS2RUZHhUMnBDYmxwc1Zsa3ZWMGxuV0V0eFNpdEZWM1ZDZVdvemVFcE9UMDB3UzA1UWJEVnVkbkZUSzBaUmFBbzVNMHBHTXpremIzTkhla2x6TWpSWmEwSlphREpGWkM5UWFWTkxObVo1VXk5WlV6ZFFkRnBRYVVZMVpFUnpjMUkxTTNwNVlraFhMMVZZU1VKVFUwcFJDbXMyZFVzMlltcHNiVzlrYVZnd1RFUk5VakJJTTJwNE5FNTRhRkpXUlVZNVQyeHFjMFZMVEVaQmIwZEJTVzR3UjAweFMxVkhORTlGUlhKRWIwUnpVMmNLVW1kRloyWkhlSFp0WWtWVGNIa3JTMXBVYjIxdllTdG5WVk5NY2xsMmNIZGFNbkkwVGtRclprNVFSbWxZV0hCdGRqRTBWVTFPSzFaVVEwWlpjMVZsVHdwMlZISmpZWFJDT0dWaVVXdG1SM2t5VjNCUU4wNUVjVzh3ZVVKRVJHMTJiVkZtYkdKSWJESkpRVkU1VjBsWFV6VkNibEJKTDNKaFIyZG5ZMGhGY2twVkNteHhPRnBhTkRCcGVEaE5PSGxYYkVOV0wybDJSbUl3UTJkWlFWUTFRVEpxY0ZsTGRURXJOelZDWkdkUFYzVnNRU3RCUjB4aVJEQmFaM1pMUldNcmNHRUtiVFkyVEUxSGNVWm5Sak5QWm5CTVJIaHBaVms1VGt4NE1EWTFPVm8wZURoblJGZFNibHBMVWtRd1FtNURURXRwTTFKUlpqRkxTV1JHVkUxc05ubHlhQXB4WlRjMFZuZEJSV2xtV2s5M05sRnFOWGhDYWtKNVlUSjZOV1paVFd4clQzRlRiVXh3ZUdJeFpGSjNZVkU0VUZoVFJuaFRiRmd2VFV4QlkwVTRibm93Q25Vd1puaFpVVXRDWjFGRVMyRmtiWEZMYUN0dGVFOTFUQzlrTVZWcVdVeHVPVnBxZDNwU01YWjVaM0ZFVTJkMmJVeFhWbEpGYVcxcGJYcDFhVGN4YUdrS0wzY3JVVEZDT0ZCUlJFOUVSSEpxTkhwTVFqZGlOQzl2WWpCa2NEbDBaVTlwWkZZeFZFdGhZbkZQTVhSck5XSkpNVlZaYm1OSlZuUjBOa2MzZEhwUFVRcEliVlZHWkVaMVFVMVdUM1p5Ym01dWNXVk5NM1U0ZDBKR2QxaFNVakphTnpKemJHaEllakJ3YzNCaVJXSTBWbU5VUVVsb1duYzlQUW90TFMwdExVVk9SQ0JTVTBFZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFE9PQ=='
    materials:
      upstream:
        pipeline: test_application
        stage: test_app_image
        name: upstream_pipeline
      SourceCodeRepo:
        git: https://github.com/sqaisar/node-bulletin-board.git
        shallow_clone: false
        auto_update: true
        branch: master
        name: SourceCodeRepo
    stages:
    - deploy_to_cluster:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
        jobs:
          deploy:
            timeout: 0
            elastic_profile_id: agent-profile
            tasks:
            - fetch:
                options:
                  EnvironmentVariablePrefix: ''
                  SkipImagePulling: 'true'
                artifact_id: bulletin-board
                pipeline: build_and_publish_image/test_application
                stage: build_and_publish_image
                job: build_image
                artifact_origin: external
                run_if: passed
            - exec:
                arguments:
                command: ./app-testing.sh
                run_if: passed
